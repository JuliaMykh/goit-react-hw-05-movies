{"version":3,"file":"static/js/402.50fa5916.chunk.js","mappings":"6OAAA,aAAO,OAAP,oBAAO,WAA+BA,GAA/B,mFACO,mCACNC,EAFD,6CAE6CD,EAF7C,YAGCE,EAHD,mBACO,mCADP,mCAKkBC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALjC,cAKCE,EALD,gBAMcA,EAASC,OANvB,cAMCC,EAND,yBASEA,GATF,mE,0BCEMC,EAAcC,EAAAA,EAAAA,GAAH,8FAMXC,EAAaD,EAAAA,EAAAA,EAAH,+F,SCJVE,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1B,OACI,wBACKA,EAAQC,QAAQC,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC/B,OAEI,2BACI,SAACT,EAAD,UAAcQ,GAAkB,cAChC,SAACN,EAAD,UAAaO,MAFRF,EAKhB,KAGZ,ECQD,EArBgB,WACd,IAAQd,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAA8BkB,EAAAA,EAAAA,UAAS,MAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,KHXG,SAAP,mCGYMC,CAAgBrB,GAASsB,KAAKH,EAI/B,CAFD,MAAOI,GACLC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACvB,KAGF,8BACGW,GAAWA,EAAQC,QAAQc,OAAS,GAAK,SAAChB,EAAD,CAAaC,QAASA,KAC7D,sEAGR,C,sBCzBD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOd,KAAKS,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOT,GACdI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAST,EACnE,CAEAQ,OAAMgB,EACR,GACF,CACF,C","sources":["components/services/apiMovieReviews.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","pages/ReviewsPage/ReviewsPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export async function getMovieReviews(movieId) {\n  const key = '73f6ff20fa414d222403a4af56220c3d';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const filter = `?api_key=${key}&language=en-US&page=1`;\n\n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();\n\n  // console.log(data);\n  return data;\n\n  // const reviewsMovies = data.results.map(\n  //   ({ author, content, id }) => {\n  //     return { author, content, id };\n  //   },\n  // );\n  \n  // console.log(reviewsMovies);\n  // return reviewsMovies;\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const ReviewTitle = styled.h2`\n    font-size: 20px;\n    font-weight: 700;\n    margin-bottom: 8px;\n`;\n\nexport const ReviewText = styled.p`\n    font-size: 16px;\n    font-weight: 400;\n    margin-bottom: 15px;\n`;","import PropTypes from 'prop-types';\n\nimport { ReviewTitle, ReviewText } from './Reviews.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n\n    return (\n        <ul>\n            {reviews.results.map(({id, author, content}) => {\n                return (\n                   \n                    <li key={id} >\n                        <ReviewTitle>{author ? author : \"No autor\"}</ReviewTitle>\n                        <ReviewText>{content}</ReviewText>\n                    </li>\n                )\n            })}\n        </ul>\n    );\n};\n\nReviewsList.propTypes = {\n    reviews: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        author: PropTypes.string,\n        content: PropTypes.string,\n    })\n};\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {getMovieReviews} from 'components/services/apiMovieReviews';\nimport { ReviewsList } from 'components/Reviews/Reviews';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    try {\n      getMovieReviews(movieId).then(setReviews);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && reviews.results.length > 0 ? (<ReviewsList reviews={reviews} />) :\n        (<h2>We don't have any reviews for this movie</h2>)}\n    </>\n  )\n}\n\nexport default Reviews;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","url","filter","fetch","response","json","data","ReviewTitle","styled","ReviewText","ReviewsList","reviews","results","map","id","author","content","useParams","useState","setReviews","useEffect","getMovieReviews","then","err","console","log","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}